#!/usr/bin/env bash
# Copyright (c) 2023 rM-self-serve
# SPDX-License-Identifier: MIT

main() {
	inapplicable_version_exit
	# collect options before or after command
	no_prompt=false
	cmd=()
	for value in "$@"; do
		case $value in
		'-y' | '--no-prompt')
			no_prompt=true
			;;
		*)
			cmd+=("$value")
			;;
		esac
	done

	case ${cmd[@]} in
	'-h' | '--help' | '')
		cli_info
		;;
	'apply')
		checkspace
		apply
		;;
	'revert')
		checkspace
		revert
		;;
	*)
		echo 'input not recognized'
		cli_info
		;;
	esac
	true
}

inapplicable_version_exit() {
	conf_file='/usr/share/remarkable/update.conf'
	if ! [ -f $conf_file ]; then
		echo >&2 "Error: Can't find ${conf_file}"
		exit 1
	fi
	xo_version=$(grep 'REMARKABLE_RELEASE_VERSION' $conf_file | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
	IFS=. read -r versA versB _ _ <<<"$xo_version"

	if [ "$versA" -eq 3 ] && [ "$versB" -ge 12 ] || [ "$versA" -ge 4 ]; then
		echo 'webinterface-upload-button is no longer necessary as of v3.12,'
		echo 'please uninstall.'
		exit
	fi
}

checkspace() {
	needed=20
	available=$(df '/' | tail -n1 | awk '{print $4}')
	if [ "$available" -lt "$needed" ]; then
		(
			echo "Less than ${needed}K free, ${available}K"
			echo "Not enough space on /"
			echo "Try to free space by running: journalctl --vacuum-time=1m"
			echo "Or: systemctl restart xochitl"
			exit 10
		) >&2
		exit 10
	fi
}

cli_info() {
	echo 'This program will add an upload button to the web interface.'
	echo 'Included funtionality to revert modification.'
	echo 'Source+Docs: https://github.com/rM-self-serve/webinterface-upload-button'
	echo ''
	echo -e "${CYAN}USAGE:${NC}"
	echo '  webinterface-upload-button [OPTIONS] [COMMANDS]'
	echo ''
	echo -e "${CYAN}COMMANDS:${NC}"
	echo '  apply           Apply upload button modification'
	echo '  revert          Revert upload button modification'
	echo ''
	echo -e "${CYAN}OPTIONS:${NC}"
	echo '  -y, --no-promt  Do not show confirmation prompt'
	echo '  -h, --help      Show help'
}



refresh_html() {
	ndx_content=$(cat $index_file)
}

vars() {
	webui_dir='/usr/share/remarkable/webui'
	index_file="${webui_dir}/index.html"
	refresh_html

	no_ws_mod=$(
		printf '
		<!-- lines added by webinterface-upload-button (cli will not recognize if edited) -->
		<script defer="defer" src="/webinterface-upload-button.js"></script>
		<!-- end webinterface-upload-button -->' |
			tr -d "\n" | tr -d "\t"
	)
	sed_no_ws_mod=${no_ws_mod//[\/]/\\\/}
}

is_html_moded() {
	[[ "$ndx_content" == *"$no_ws_mod"* ]]
}

can_mod_html() {
	echo "$ndx_content" | grep -qh '</head>'
}

prompt() {
	if [ "$no_prompt" = false ]; then
		read -r -p "Would you like to continue? [y/N] " response
		case "$response" in
		[yY][eE][sS] | [yY])
			true
			;;
		*)
			echo "Cancel"
			exit
			;;
		esac
	fi
}

apply() {
	vars

	if is_html_moded; then
		echo "Html already modified"
		return 0
	fi
	if ! can_mod_html; then
		echo >&2 "Html unrecognized"
		return 1
	fi

	echo "Applying webinterface-upload-button will edit:"
	echo "$index_file"
	echo ""
	prompt

	if ! apply_index; then
		exit 1
	fi
	refresh_html
	if ! is_html_moded; then
		echo >&2 "Error: Html not modified"
		return 1
	fi
	echo "Html modified"
}

revert() {
	vars

	if ! is_html_moded; then
		echo "Html has not been modified"
		return 0
	fi

	echo "Reverting webinterface-upload-button will edit:"
	echo "$index_file"
	echo ""
	prompt

	if ! revert_index; then
		exit 1
	fi

	refresh_html
	if is_html_moded; then
		echo >&2 "Error: Html not reverted"
		return 1
	fi
	echo "Html reverted"
}

apply_index() {
	sed -i "s/<\/head>/$sed_no_ws_mod<\/head>/" "$index_file"
}

revert_index() {
	sed -i "s/$sed_no_ws_mod//g" "$index_file"
}

CYAN='\033[0;36m'
NC='\033[0m' # No Color

main "$@"
